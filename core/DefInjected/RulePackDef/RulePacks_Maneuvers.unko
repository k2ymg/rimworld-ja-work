;damaged_infは名詞にしないと無理がある。が、語彙が足りないの全部同じにした。

{?Maneuver_Slash.rulePack.rulesStrings
	:damaged_inf(p=4)->攻撃
	:damaged_inf->攻撃
	:damaged_inf->攻撃
	:damaged_inf->攻撃
	:damaged_inf->攻撃
	:damaged_inf(deflected!=True)->攻撃

	:damaged_past(p=4)->斬った
	:damaged_past->切った
	:damaged_past->切り刻んだ
	:damaged_past->叩き切った
	:damaged_past->切り裂いた
	:damaged_past(deflected!=True)->抉った

	:damaged_present->斬っている
	:damaged_present->切っている
	:damaged_present->切り裂いている
	:damaged_present(deflected!=True)->抉っている
	:damaged_present(deflected!=True)->引き裂いている
	:damaged_present(deflected!=True)->切り裂いている

	:woundname->傷
	:woundname(p=0.3)->裂け目
	:flavortext_situation(recipient_flesh!=Mechanoid)->[woundname]から血を流しながら
	:flavortext_situation->[woundname]から液体を垂れ流しながら
	:flavortext_consequence(recipient_flesh!=Mechanoid)->皮下組織をさらけ出しながら
	:flavortext_consequence(recipient_flesh==Mechanoid)->内部機器をさらけ出しながら
	:flavortext_consequence(recipient_flesh!=Mechanoid)->血まみれの[woundname]に構わず

	:destroyed_past->真っ二つにした
	:destroyed_past->細切れにした
	:destroyed_past->切り落とした
	:destroyed_past->切り離した
	:destroyed_past->引き裂いた

	:destroyed_present->真っ二つにしている
	:destroyed_present->細切れにしている
	:destroyed_present->半分にしている
	:destroyed_present->切り離している
	:destroyed_present->切り裂いている

	:destroyed_suffix->滑らかな小片に
	:destroyed_suffix->綺麗に
	:destroyed_suffix(target_part_destroyed_count==1)->中身を晒しながら
	:destroyed_suffix(target_part_destroyed_count==1)->削り取るように
}

{?Maneuver_Stab.rulePack.rulesStrings
	:damaged_inf(p=4)->攻撃
	:damaged_inf->攻撃
	:damaged_inf(deflected!=True)->攻撃
	:damaged_inf(deflected!=True)->攻撃
	:damaged_inf(deflected!=True)->攻撃

	:damaged_past(p=4)->突き刺した
	:damaged_past->突いた
	:damaged_past(deflected!=True)->刺し通した
	:damaged_past(deflected!=True)->刺した
	:damaged_past(deflected!=True)->串刺しにした

	:damaged_present(deflected!=True)->刺し通している
	:damaged_present(deflected!=True)->刺している
	:damaged_present(deflected!=True)->穿っている
	:damaged_present(deflected!=True)->串刺しにしている

	:woundname->穴
	:woundname->創傷
	:woundname->裂け目
	:flavortext_consequence(recipient_flesh!=Mechanoid)->血まみれの[woundname]に構わずに
	:flavortext_consequence(recipient_flesh!=Mechanoid)->裂けた[woundname]に構わずに
	:flavortext_consequence(recipient_flesh!=Mechanoid)->出血している[woundname]に構わずに

	:destroyed_past->刺し貫いた
	:destroyed_past->貫通した
	:destroyed_past->串刺しにした

	:destroyed_present->刺し貫いている
	:destroyed_present->貫通している
	:destroyed_present->串刺しにしている

	:destroyed_suffix->真っ直ぐに
	:destroyed_suffix->綺麗な穴を残しながら
	:destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->血が噴き出すのも気にせずに
	:destroyed_suffix(target_part_destroyed_count==1)->何かの液体が噴き出すのも気にせずに
}

{?Maneuver_Smash_Damage.rulePack.rulesStrings
	:damaged_inf(p=4)->攻撃
	:damaged_inf->攻撃
	:damaged_inf->攻撃
	:damaged_inf->攻撃
	:damaged_inf->攻撃

	:damaged_past(p=4)->打った
	:damaged_past->殴った
	:damaged_past->打った
	:damaged_past->打ち付けた
	:damaged_past->打った

	:damaged_present->打っている
	:damaged_present->殴っている
	:damaged_present->打ち付けている
	:damaged_present(deflected!=True)->へこましている
	:damaged_present(deflected!=True)->裂いている

	:destroyed_past->粉々にした
	:destroyed_past->潰した
	:destroyed_past->砕いた
	:destroyed_past->破壊した
	:destroyed_past->破壊した

	:destroyed_present->粉々にしている
	:destroyed_present->潰している
	:destroyed_present->砕いている
	:destroyed_present->破壊している
	:destroyed_present->壊している
}

{?Maneuver_Smash.rulePack.rulesStrings
	:flavortext_consequence(recipient_flesh!=Mechanoid)->大きな打撲傷を残しながら
	:flavortext_consequence->明らかな変形を残しながら
	:flavortext_consequence->ぐらついている[RECIPIENT_objective]を殴りながら
	:flavortext_consequence->[RECIPIENT_objective]を横殴りしながら

	:destroyed_suffix->欠片[to]
	:destroyed_suffix->小片[to]
	:destroyed_suffix(recipient_flesh!=Mechanoid)->細かな霧状[to]
	:destroyed_suffix->断片[to]
}

{?Maneuver_Scratch_Damage.rulePack.rulesStrings
	:damaged_inf(p=4)->攻撃
	:damaged_inf(deflected!=True)->攻撃
	:damaged_inf(deflected!=True)->攻撃
	:damaged_inf->攻撃

	:damaged_past(p=4)->引っ掻いた
	:damaged_past(deflected!=True)->切り裂いた
	:damaged_past(deflected!=True)->引き裂いた
	:damaged_past->切った

	:damaged_present->引っ掻いている
	:damaged_present(deflected!=True)->切り裂いている
	:damaged_present(deflected!=True)->引き裂いている
	:damaged_present->切っている

	:destroyed_past->引っ掻いた
	:destroyed_past->切り裂いた
	:destroyed_past->引きちぎった
	:destroyed_past->ズタズタに裂いた
	:destroyed_past->引き裂いた

	:destroyed_present->引っ掻いている
	:destroyed_present->引き裂いている
	:destroyed_present->引きちぎっている
	:destroyed_present->ズタズタに裂いている
	:destroyed_present->引き裂いている
}

{?Maneuver_Scratch.rulePack.rulesStrings
	:woundname->傷
	:woundname(p=0.3)->傷口
	:flavortext_situation(recipient_flesh!=Mechanoid)->[woundname]から血を流しながら
	:flavortext_situation->[woundname]から体液を流しながら
	:flavortext_consequence(recipient_flesh!=Mechanoid)->皮下組織を露わにしながら
	:flavortext_consequence(recipient_flesh==Mechanoid)->内部機器を露わにしながら
	:flavortext_consequence(recipient_flesh!=Mechanoid)->血まみれの[woundname]には構わず

	:destroyed_suffix(recipient_flesh!=Mechanoid)->荒い薄片[to]
	:destroyed_suffix->薄片[to]
	:destroyed_suffix(recipient_flesh!=Mechanoid)->荒い破片[to]
	:destroyed_suffix->破片[to]
	:destroyed_suffix->断片[to]
	:destroyed_suffix(recipient_flesh!=Mechanoid)->血糊の塊[to]
}

{?Maneuver_Poke.rulePack.rulesStrings
	:damaged_inf(p=2)->攻撃
	:damaged_inf(p=2)->攻撃
	:damaged_inf->攻撃
	:damaged_inf->攻撃
	:damaged_inf->攻撃

	:damaged_past(p=2)->突いた
	:damaged_past(p=2)->軽く突いた
	:damaged_past->つついた
	:damaged_past->強く突いた
	:damaged_past->突き刺した

	:damaged_present(p=2)->突いている
	:damaged_present(p=2)->軽く突いている
	:damaged_present->つついている
	:damaged_present->強く突いている
	:damaged_present->突き刺している

	:flavortext_consequence(recipient_flesh!=Mechanoid)->大きな打撲傷を残しながら
	:flavortext_consequence->明らかに変形させながら
	:flavortext_consequence->ふらついている[RECIPIENT_objective]を殴りながら
	:flavortext_consequence->[RECIPIENT_objective]を横殴りしながら

	:destroyed_past->砕いた
	:destroyed_past->潰した
	:destroyed_past->壊した
	:destroyed_past->壊した
	:destroyed_past->壊した

	:destroyed_present->砕いている
	:destroyed_present->潰している
	:destroyed_present->壊している
	:destroyed_present->壊している
	:destroyed_present->壊している

	:destroyed_suffix->破片[to]
	:destroyed_suffix->小片[to]
	:destroyed_suffix(recipient_flesh!=Mechanoid)->細かな霧状[to]
	:destroyed_suffix->断片[to]
}

{?Maneuver_Bite.rulePack.rulesStrings
	:damaged_inf->攻撃
	:damaged_inf->攻撃
	:damaged_inf(p=0.5)->攻撃

	; 「Aを～」になるように。
	:damaged_past->噛んだ
	:damaged_past->喰らった
	:damaged_past->噛んだ
	:damaged_past->かじった
	:damaged_past(deflected!=True)->引き裂いた

	:damaged_present->噛んでいる
	:damaged_present->食らいついている
	:damaged_present->噛んだ
	:damaged_present->かじっている
	:damaged_present(deflected!=True)->引き裂いている

	:flavortext_consequence(recipient_flesh!=Mechanoid)->皮下組織を露わにしながら
	:flavortext_consequence(recipient_flesh==Mechanoid)->内部機器を露わにしながら
	:flavortext_consequence(recipient_flesh!=Mechanoid)->皮膚に容赦ない傷を残しながら
	:flavortext_consequence(recipient_flesh==Mechanoid)->装甲に容赦ない傷を残しながら

	:destroyed_past->むさぼり食った
	:destroyed_past->噛みきった
	:destroyed_past->引き裂いた
	:destroyed_past->破壊した

	:destroyed_present->むさぼり食っている
	:destroyed_present->噛みきっている
	:destroyed_present->引き裂いている
	:destroyed_present->破壊している

	:destroyed_suffix->[to] shreds
	:destroyed_suffix->破片[to]
	:destroyed_suffix->薄片[to]
	:destroyed_suffix(recipient_flesh!=Mechanoid)->乱雑な薄片[to]
	:destroyed_suffix(recipient_flesh!=Mechanoid)->肉塊[to]
}

{?Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings
	:r_logentry->[INITIATOR_definite]が[RECIPIENT_definite]の目に[TOOL_label]を蹴り上げた。
	:r_logentry(p=0.2)->[INITIATOR_definite]が[RECIPIENT_definite]の目に[TOOL_label]を霧状に蹴り上げた。
}

{?Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings
	:r_logentry->[INITIATOR_definite]が[RECIPIENT_definite]の目に[TOOL_label]を蹴り上げようとしたが失敗した。
}
{?Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings
	:r_logentry->[INITIATOR_definite]が[RECIPIENT_definite]の目に[TOOL_label]を蹴り上げたが、[RECIPIENT_definite]はそれを避けた。
	:r_logentry->[INITIATOR_definite]が[RECIPIENT_definite]の目に[TOOL_label]を蹴り上げたが、[RECIPIENT_definite]はそれを遮った。
}
